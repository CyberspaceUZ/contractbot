on:
  push:
    branches:
      - master

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Print slug/short variables
      run: |
        echo "Slug variables"
        echo " - ${{ env.GITHUB_REF_SLUG }}"    
        echo " - ${{ env.GITHUB_HEAD_REF_SLUG }}"
        echo " - ${{ env.GITHUB_BASE_REF_SLUG }}"
        echo " - ${{ env.GITHUB_REPOSITORY_SLUG }}"
        // output e.g. : master feat-new-feature v1.0.0 product-1.0.0-rc.2 new-awesome-product
        echo "Slug URL variables"
        echo " - ${{ env.GITHUB_REF_SLUG_URL }}"
        echo " - ${{ env.GITHUB_HEAD_REF_SLUG_URL }}"
        echo " - ${{ env.GITHUB_BASE_REF_SLUG_URL }}"
        echo " - ${{ env.GITHUB_REPOSITORY_SLUG_URL }}"
        // output e.g. : master feat-new-feature v1-0-0 product-1-0-0-rc-2 new-awesome-product
        echo "Short SHA variables"
        echo " - ${{ env.GITHUB_SHA_SHORT }}"
        // output e.g. : ffac537e
    
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: contractbot
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
